{"version":3,"sources":["wxParse/wxParse.js"],"names":["realWindowWidth","realWindowHeight","wx","getSystemInfo","success","res","windowWidth","windowHeight","wxParse","bindName","type","data","target","imagePadding","that","transData","html2json","console","log","JSON","stringify","converter","Converter","html","makeHtml","view","bindData","setData","wxParseImgLoad","wxParseImgTap","e","nowImgUrl","dataset","src","tagFrom","from","length","previewImage","current","urls","imageUrls","idx","calMoreImageInfo","temData","images","temImages","recal","wxAutoImageCal","detail","width","height","index","key","split","i","keyW","keyH","imageWidth","imageheight","originalWidth","originalHeight","autoWidth","autoHeight","results","padding","wxParseTemArray","temArrayName","bindNameReg","total","array","obj","simArr","nodes","push","parse","emojisInit","reg","baseSrc","emojis","module","exports"],"mappings":"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","file":"wxParse.js","sourcesContent":["/**\n * author: Di (微信小程序开发工程师)\n * organization: WeAppDev(微信小程序开发论坛)(http://weappdev.com)\n *               垂直微信小程序开发交流社区\n * \n * github地址: https://github.com/icindy/wxParse\n * \n * for: 微信小程序富文本解析\n * detail : http://weappdev.com/t/wxparse-alpha0-1-html-markdown/184\n */\n\n/**\n * utils函数引入\n **/\nimport showdown from './showdown.js';\nimport HtmlToJson from './html2json.js';\n/**\n * 配置及公有属性\n **/\nvar realWindowWidth = 0;\nvar realWindowHeight = 0;\nwx.getSystemInfo({\n  success: function (res) {\n    realWindowWidth = res.windowWidth\n    realWindowHeight = res.windowHeight\n  }\n})\n/**\n * 主函数入口区\n **/\nfunction wxParse(bindName = 'wxParseData', type='html', data='<div class=\"color:red;\">数据不能为空</div>', target,imagePadding) {\n  var that = target;\n  var transData = {};//存放转化后的数据\n  if (type == 'html') {\n    transData = HtmlToJson.html2json(data, bindName);\n    console.log(JSON.stringify(transData, ' ', ' '));\n  } else if (type == 'md' || type == 'markdown') {\n    var converter = new showdown.Converter();\n    var html = converter.makeHtml(data);\n    transData = HtmlToJson.html2json(html, bindName);\n    console.log(JSON.stringify(transData, ' ', ' '));\n  }\n  transData.view = {};\n  transData.view.imagePadding = 0;\n  if(typeof(imagePadding) != 'undefined'){\n    transData.view.imagePadding = imagePadding\n  }\n  var bindData = {};\n  bindData[bindName] = transData;\n  that.setData(bindData)\n  that.wxParseImgLoad = wxParseImgLoad;\n  that.wxParseImgTap = wxParseImgTap;\n}\n// 图片点击事件\nfunction wxParseImgTap(e) {\n  var that = this;\n  var nowImgUrl = e.target.dataset.src;\n  var tagFrom = e.target.dataset.from;\n  if (typeof (tagFrom) != 'undefined' && tagFrom.length > 0) {\n    wx.previewImage({\n      current: nowImgUrl, // 当前显示图片的http链接\n      urls: that.data[tagFrom].imageUrls // 需要预览的图片http链接列表\n    })\n  }\n}\n\n/**\n * 图片视觉宽高计算函数区 \n **/\nfunction wxParseImgLoad(e) {\n  var that = this;\n  var tagFrom = e.target.dataset.from;\n  var idx = e.target.dataset.idx;\n  if (typeof (tagFrom) != 'undefined' && tagFrom.length > 0) {\n    calMoreImageInfo(e, idx, that, tagFrom)\n  } \n}\n// 假循环获取计算图片视觉最佳宽高\nfunction calMoreImageInfo(e, idx, that, bindName) {\n  var temData = that.data[bindName];\n  if (!temData || temData.images.length == 0) {\n    return;\n  }\n  var temImages = temData.images;\n  //因为无法获取view宽度 需要自定义padding进行计算，稍后处理\n  var recal = wxAutoImageCal(e.detail.width, e.detail.height,that,bindName); \n  // temImages[idx].width = recal.imageWidth;\n  // temImages[idx].height = recal.imageheight; \n  // temData.images = temImages;\n  // var bindData = {};\n  // bindData[bindName] = temData;\n  // that.setData(bindData);\n  var index = temImages[idx].index\n  var key = `${bindName}`\n  for (var i of index.split('.')) key+=`.nodes[${i}]`\n  var keyW = key + '.width'\n  var keyH = key + '.height'\n  that.setData({\n    [keyW]: recal.imageWidth,\n    [keyH]: recal.imageheight,\n  })\n}\n\n// 计算视觉优先的图片宽高\nfunction wxAutoImageCal(originalWidth, originalHeight,that,bindName) {\n  //获取图片的原始长宽\n  var windowWidth = 0, windowHeight = 0;\n  var autoWidth = 0, autoHeight = 0;\n  var results = {};\n  var padding = that.data[bindName].view.imagePadding;\n  windowWidth = realWindowWidth-2*padding;\n  windowHeight = realWindowHeight;\n  //判断按照那种方式进行缩放\n  // console.log(\"windowWidth\" + windowWidth);\n  if (originalWidth > windowWidth) {//在图片width大于手机屏幕width时候\n    autoWidth = windowWidth;\n    // console.log(\"autoWidth\" + autoWidth);\n    autoHeight = (autoWidth * originalHeight) / originalWidth;\n    // console.log(\"autoHeight\" + autoHeight);\n    results.imageWidth = autoWidth;\n    results.imageheight = autoHeight;\n  } else {//否则展示原来的数据\n    results.imageWidth = originalWidth;\n    results.imageheight = originalHeight;\n  }\n  return results;\n}\n\nfunction wxParseTemArray(temArrayName,bindNameReg,total,that){\n  var array = [];\n  var temData = that.data;\n  var obj = null;\n  for(var i = 0; i < total; i++){\n    var simArr = temData[bindNameReg+i].nodes;\n    array.push(simArr);\n  }\n\n  temArrayName = temArrayName || 'wxParseTemArray';\n  obj = JSON.parse('{\"'+ temArrayName +'\":\"\"}');\n  obj[temArrayName] = array;\n  that.setData(obj);\n}\n\n/**\n * 配置emojis\n * \n */\n\nfunction emojisInit(reg='',baseSrc=\"/wxParse/emojis/\",emojis){\n   HtmlToJson.emojisInit(reg,baseSrc,emojis);\n}\n\nmodule.exports = {\n  wxParse: wxParse,\n  wxParseTemArray:wxParseTemArray,\n  emojisInit:emojisInit\n}\n\n\n"]}