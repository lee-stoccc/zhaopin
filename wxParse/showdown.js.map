{"version":3,"sources":["wxParse/showdown.js"],"names":["getDefaultOpts","simple","defaultOptions","omitExtraWLInCodeBlocks","defaultValue","describe","type","noHeaderId","prefixHeaderId","headerLevelStart","parseImgDimensions","simplifiedAutoLink","literalMidWordUnderscores","strikethrough","tables","tablesHeaderId","ghCodeBlocks","tasklists","smoothLivePreview","smartIndentationFix","description","JSON","parse","stringify","ret","opt","hasOwnProperty","showdown","parsers","extensions","globalOptions","flavor","github","vanilla","helper","setOption","key","value","getOption","getOptions","resetOptions","setFlavor","name","preset","option","getDefaultOptions","subParser","func","isString","Error","extension","ext","stdExtName","isUndefined","isArray","validExtension","validate","valid","error","getAllExtensions","removeExtension","resetExtensions","errMsg","i","length","baseMsg","toLowerCase","listeners","filter","regex","ln","RegExp","replace","validateExtension","console","warn","a","String","isFunction","getType","toString","call","forEach","obj","callback","constructor","Array","s","escapeCharactersCallback","wholeMatch","m1","charCodeToEscape","charCodeAt","escapeCharacters","text","charsToEscape","afterBackslash","regexString","rgxFindMatchPos","str","left","right","flags","f","g","indexOf","x","l","pos","t","m","start","end","exec","test","lastIndex","index","match","push","matchRecursiveRegExp","matchPos","results","slice","replaceRecursiveRegExp","replacement","repStr","finalStr","lng","bits","join","msg","alert","log","Converter","converterOptions","options","langExtensions","outputModifiers","_constructor","gOpt","_parseExtension","legacyExtensionLoading","validExt","listen","rTrimInputText","rsp","rgx","_dispatch","dispatch","evtName","globals","ei","nText","makeHtml","gHtmlBlocks","gHtmlMdBlocks","gHtmlSpans","gUrls","gTitles","gDimensions","gListLevel","hashLinkCounts","converter","addExtension","useExtension","extensionName","splice","ii","language","output","writeAnchorTag","m2","m3","m4","m5","m6","m7","linkText","linkId","url","title","search","result","simpleURLRegex","delimUrlRegex","simpleMailRegex","delimMailRegex","replaceLink","replaceMail","wm","link","lnkTxt","unescapedStr","bq","pre","pattern","codeblock","nextChar","c","leadingText","numSpaces","addr","encode","ch","Math","floor","random","r","tag","blockText","blockTags","repFunc","txt","config","matches","prefixHeader","isNaN","parseInt","setextRegexH1","setextRegexH2","spanGamut","hID","headerId","hLevel","hashBlock","matchFound","span","header","escapedId","inlineRegExp","referenceRegExp","writeImageTag","altText","width","height","gDims","processListItems","listStr","trimTrailing","isParagraphed","taskbtn","checked","trim","item","bulletStyle","otp","parseConsecutiveLists","list","listType","counterRxg","subLists","parseCL","wholeList","grafs","split","grafsOut","grafsOutIt","codeFlag","delim","$1","num","$2","re","blankLines","tableRgx","parseStyles","sLine","parseHeaders","style","id","tableHeaderId","parseCells","cell","subText","buildTable","headers","cells","tb","tblLgn","rawTable","tableLines","rawHeaders","map","rawStyles","rawCells","styles","shift","row","charCodeToReplace","fromCharCode","module","exports"],"mappings":"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","file":"showdown.js","sourcesContent":["/**\n *\n * showdown: https://github.com/showdownjs/showdown\n *\n * author: Di (微信小程序开发工程师)\n * organization: WeAppDev(微信小程序开发论坛)(http://weappdev.com)\n *               垂直微信小程序开发交流社区\n *\n * github地址: https://github.com/icindy/wxParse\n *\n * for: 微信小程序富文本解析\n * detail : http://weappdev.com/t/wxparse-alpha0-1-html-markdown/184\n */\n\nfunction getDefaultOpts (simple) {\n  'use strict'\n\n  var defaultOptions = {\n    omitExtraWLInCodeBlocks: {\n      defaultValue: false,\n      describe: 'Omit the default extra whiteline added to code blocks',\n      type: 'boolean'\n    },\n    noHeaderId: {\n      defaultValue: false,\n      describe: 'Turn on/off generated header id',\n      type: 'boolean'\n    },\n    prefixHeaderId: {\n      defaultValue: false,\n      describe: 'Specify a prefix to generated header ids',\n      type: 'string'\n    },\n    headerLevelStart: {\n      defaultValue: false,\n      describe: 'The header blocks level start',\n      type: 'integer'\n    },\n    parseImgDimensions: {\n      defaultValue: false,\n      describe: 'Turn on/off image dimension parsing',\n      type: 'boolean'\n    },\n    simplifiedAutoLink: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM autolink style',\n      type: 'boolean'\n    },\n    literalMidWordUnderscores: {\n      defaultValue: false,\n      describe: 'Parse midword underscores as literal underscores',\n      type: 'boolean'\n    },\n    strikethrough: {\n      defaultValue: false,\n      describe: 'Turn on/off strikethrough support',\n      type: 'boolean'\n    },\n    tables: {\n      defaultValue: false,\n      describe: 'Turn on/off tables support',\n      type: 'boolean'\n    },\n    tablesHeaderId: {\n      defaultValue: false,\n      describe: 'Add an id to table headers',\n      type: 'boolean'\n    },\n    ghCodeBlocks: {\n      defaultValue: true,\n      describe: 'Turn on/off GFM fenced code blocks support',\n      type: 'boolean'\n    },\n    tasklists: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM tasklist support',\n      type: 'boolean'\n    },\n    smoothLivePreview: {\n      defaultValue: false,\n      describe: 'Prevents weird effects in live previews due to incomplete input',\n      type: 'boolean'\n    },\n    smartIndentationFix: {\n      defaultValue: false,\n      description: 'Tries to smartly fix identation in es6 strings',\n      type: 'boolean'\n    }\n  }\n  if (simple === false) {\n    return JSON.parse(JSON.stringify(defaultOptions))\n  }\n  var ret = {}\n  for (var opt in defaultOptions) {\n    if (defaultOptions.hasOwnProperty(opt)) {\n      ret[opt] = defaultOptions[opt].defaultValue\n    }\n  }\n  return ret\n}\n\n/**\n * Created by Tivie on 06-01-2015.\n */\n\n// Private properties\nvar showdown = {},\n  parsers = {},\n  extensions = {},\n  globalOptions = getDefaultOpts(true),\n  flavor = {\n    github: {\n      omitExtraWLInCodeBlocks: true,\n      prefixHeaderId: 'user-content-',\n      simplifiedAutoLink: true,\n      literalMidWordUnderscores: true,\n      strikethrough: true,\n      tables: true,\n      tablesHeaderId: true,\n      ghCodeBlocks: true,\n      tasklists: true\n    },\n    vanilla: getDefaultOpts(true)\n  }\n\n/**\n * helper namespace\n * @type {{}}\n */\nshowdown.helper = {}\n\n/**\n * TODO LEGACY SUPPORT CODE\n * @type {{}}\n */\nshowdown.extensions = {}\n\n/**\n * Set a global option\n * @static\n * @param {string} key\n * @param {*} value\n * @returns {showdown}\n */\nshowdown.setOption = function (key, value) {\n  'use strict'\n  globalOptions[key] = value\n  return this\n}\n\n/**\n * Get a global option\n * @static\n * @param {string} key\n * @returns {*}\n */\nshowdown.getOption = function (key) {\n  'use strict'\n  return globalOptions[key]\n}\n\n/**\n * Get the global options\n * @static\n * @returns {{}}\n */\nshowdown.getOptions = function () {\n  'use strict'\n  return globalOptions\n}\n\n/**\n * Reset global options to the default values\n * @static\n */\nshowdown.resetOptions = function () {\n  'use strict'\n  globalOptions = getDefaultOpts(true)\n}\n\n/**\n * Set the flavor showdown should use as default\n * @param {string} name\n */\nshowdown.setFlavor = function (name) {\n  'use strict'\n  if (flavor.hasOwnProperty(name)) {\n    var preset = flavor[name]\n    for (var option in preset) {\n      if (preset.hasOwnProperty(option)) {\n        globalOptions[option] = preset[option]\n      }\n    }\n  }\n}\n\n/**\n * Get the default options\n * @static\n * @param {boolean} [simple=true]\n * @returns {{}}\n */\nshowdown.getDefaultOptions = function (simple) {\n  'use strict'\n  return getDefaultOpts(simple)\n}\n\n/**\n * Get or set a subParser\n *\n * subParser(name)       - Get a registered subParser\n * subParser(name, func) - Register a subParser\n * @static\n * @param {string} name\n * @param {function} [func]\n * @returns {*}\n */\nshowdown.subParser = function (name, func) {\n  'use strict'\n  if (showdown.helper.isString(name)) {\n    if (typeof func !== 'undefined') {\n      parsers[name] = func\n    } else {\n      if (parsers.hasOwnProperty(name)) {\n        return parsers[name]\n      } else {\n        throw Error('SubParser named ' + name + ' not registered!')\n      }\n    }\n  }\n}\n\n/**\n * Gets or registers an extension\n * @static\n * @param {string} name\n * @param {object|function=} ext\n * @returns {*}\n */\nshowdown.extension = function (name, ext) {\n  'use strict'\n\n  if (!showdown.helper.isString(name)) {\n    throw Error('Extension \\'name\\' must be a string')\n  }\n\n  name = showdown.helper.stdExtName(name)\n\n  // Getter\n  if (showdown.helper.isUndefined(ext)) {\n    if (!extensions.hasOwnProperty(name)) {\n      throw Error('Extension named ' + name + ' is not registered!')\n    }\n    return extensions[name]\n\n    // Setter\n  } else {\n    // Expand extension if it's wrapped in a function\n    if (typeof ext === 'function') {\n      ext = ext()\n    }\n\n    // Ensure extension is an array\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext]\n    }\n\n    var validExtension = validate(ext, name)\n\n    if (validExtension.valid) {\n      extensions[name] = ext\n    } else {\n      throw Error(validExtension.error)\n    }\n  }\n}\n\n/**\n * Gets all extensions registered\n * @returns {{}}\n */\nshowdown.getAllExtensions = function () {\n  'use strict'\n  return extensions\n}\n\n/**\n * Remove an extension\n * @param {string} name\n */\nshowdown.removeExtension = function (name) {\n  'use strict'\n  delete extensions[name]\n}\n\n/**\n * Removes all extensions\n */\nshowdown.resetExtensions = function () {\n  'use strict'\n  extensions = {}\n}\n\n/**\n * Validate extension\n * @param {array} extension\n * @param {string} name\n * @returns {{valid: boolean, error: string}}\n */\nfunction validate (extension, name) {\n  'use strict'\n\n  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n    ret = {\n      valid: true,\n      error: ''\n    }\n\n  if (!showdown.helper.isArray(extension)) {\n    extension = [extension]\n  }\n\n  for (var i = 0; i < extension.length; ++i) {\n    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n      ext = extension[i]\n    if (typeof ext !== 'object') {\n      ret.valid = false\n      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given'\n      return ret\n    }\n\n    if (!showdown.helper.isString(ext.type)) {\n      ret.valid = false\n      ret.error = baseMsg + 'property \"type\" must be a string, but ' + typeof ext.type + ' given'\n      return ret\n    }\n\n    var type = ext.type = ext.type.toLowerCase()\n\n    // normalize extension type\n    if (type === 'language') {\n      type = ext.type = 'lang'\n    }\n\n    if (type === 'html') {\n      type = ext.type = 'output'\n    }\n\n    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n      ret.valid = false\n      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"'\n      return ret\n    }\n\n    if (type === 'listener') {\n      if (showdown.helper.isUndefined(ext.listeners)) {\n        ret.valid = false\n        ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"'\n        return ret\n      }\n    } else {\n      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n        ret.valid = false\n        ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method'\n        return ret\n      }\n    }\n\n    if (ext.listeners) {\n      if (typeof ext.listeners !== 'object') {\n        ret.valid = false\n        ret.error = baseMsg + '\"listeners\" property must be an object but ' + typeof ext.listeners + ' given'\n        return ret\n      }\n      for (var ln in ext.listeners) {\n        if (ext.listeners.hasOwnProperty(ln)) {\n          if (typeof ext.listeners[ln] !== 'function') {\n            ret.valid = false\n            ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln +\n              ' must be a function but ' + typeof ext.listeners[ln] + ' given'\n            return ret\n          }\n        }\n      }\n    }\n\n    if (ext.filter) {\n      if (typeof ext.filter !== 'function') {\n        ret.valid = false\n        ret.error = baseMsg + '\"filter\" must be a function, but ' + typeof ext.filter + ' given'\n        return ret\n      }\n    } else if (ext.regex) {\n      if (showdown.helper.isString(ext.regex)) {\n        ext.regex = new RegExp(ext.regex, 'g')\n      }\n      if (!ext.regex instanceof RegExp) {\n        ret.valid = false\n        ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given'\n        return ret\n      }\n      if (showdown.helper.isUndefined(ext.replace)) {\n        ret.valid = false\n        ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function'\n        return ret\n      }\n    }\n  }\n  return ret\n}\n\n/**\n * Validate extension\n * @param {object} ext\n * @returns {boolean}\n */\nshowdown.validateExtension = function (ext) {\n  'use strict'\n\n  var validateExtension = validate(ext, null)\n  if (!validateExtension.valid) {\n    console.warn(validateExtension.error)\n    return false\n  }\n  return true\n}\n\n/**\n * showdownjs helper functions\n */\n\nif (!showdown.hasOwnProperty('helper')) {\n  showdown.helper = {}\n}\n\n/**\n * Check if var is string\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isString = function isString (a) {\n  'use strict'\n  return (typeof a === 'string' || a instanceof String)\n}\n\n/**\n * Check if var is a function\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isFunction = function isFunction (a) {\n  'use strict'\n  var getType = {}\n  return a && getType.toString.call(a) === '[object Function]'\n}\n\n/**\n * ForEach helper function\n * @static\n * @param {*} obj\n * @param {function} callback\n */\nshowdown.helper.forEach = function forEach (obj, callback) {\n  'use strict'\n  if (typeof obj.forEach === 'function') {\n    obj.forEach(callback)\n  } else {\n    for (var i = 0; i < obj.length; i++) {\n      callback(obj[i], i, obj)\n    }\n  }\n}\n\n/**\n * isArray helper function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isArray = function isArray (a) {\n  'use strict'\n  return a.constructor === Array\n}\n\n/**\n * Check if value is undefined\n * @static\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n */\nshowdown.helper.isUndefined = function isUndefined (value) {\n  'use strict'\n  return typeof value === 'undefined'\n}\n\n/**\n * Standardidize extension name\n * @static\n * @param {string} s extension name\n * @returns {string}\n */\nshowdown.helper.stdExtName = function (s) {\n  'use strict'\n  return s.replace(/[_-]||\\s/g, '').toLowerCase()\n}\n\nfunction escapeCharactersCallback (wholeMatch, m1) {\n  'use strict'\n  var charCodeToEscape = m1.charCodeAt(0)\n  return '~E' + charCodeToEscape + 'E'\n}\n\n/**\n * Callback used to escape characters when passing through String.replace\n * @static\n * @param {string} wholeMatch\n * @param {string} m1\n * @returns {string}\n */\nshowdown.helper.escapeCharactersCallback = escapeCharactersCallback\n\n/**\n * Escape characters in a string\n * @static\n * @param {string} text\n * @param {string} charsToEscape\n * @param {boolean} afterBackslash\n * @returns {XML|string|void|*}\n */\nshowdown.helper.escapeCharacters = function escapeCharacters (text, charsToEscape, afterBackslash) {\n  'use strict'\n  // First we have to escape the escape characters so that\n  // we can build a character class out of them\n  var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])'\n\n  if (afterBackslash) {\n    regexString = '\\\\\\\\' + regexString\n  }\n\n  var regex = new RegExp(regexString, 'g')\n  text = text.replace(regex, escapeCharactersCallback)\n\n  return text\n}\n\nvar rgxFindMatchPos = function (str, left, right, flags) {\n  'use strict'\n  var f = flags || '',\n    g = f.indexOf('g') > -1,\n    x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n    l = new RegExp(left, f.replace(/g/g, '')),\n    pos = [],\n    t, s, m, start, end\n\n  do {\n    t = 0\n    while ((m = x.exec(str))) {\n      if (l.test(m[0])) {\n        if (!(t++)) {\n          s = x.lastIndex\n          start = s - m[0].length\n        }\n      } else if (t) {\n        if (!--t) {\n          end = m.index + m[0].length\n          var obj = {\n            left: {start: start, end: s},\n            match: {start: s, end: m.index},\n            right: {start: m.index, end: end},\n            wholeMatch: {start: start, end: end}\n          }\n          pos.push(obj)\n          if (!g) {\n            return pos\n          }\n        }\n      }\n    }\n  } while (t && (x.lastIndex = s))\n\n  return pos\n}\n\n/**\n * matchRecursiveRegExp\n *\n * (c) 2007 Steven Levithan <stevenlevithan.com>\n * MIT License\n *\n * Accepts a string to search, a left and right format delimiter\n * as regex patterns, and optional regex flags. Returns an array\n * of matches, allowing nested instances of left/right delimiters.\n * Use the \"g\" flag to return all matches, otherwise only the\n * first is returned. Be careful to ensure that the left and\n * right format delimiters produce mutually exclusive matches.\n * Backreferences are not supported within the right delimiter\n * due to how it is internally combined with the left delimiter.\n * When matching strings whose format delimiters are unbalanced\n * to the left or right, the output is intentionally as a\n * conventional regex library with recursion support would\n * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n * \"<\" and \">\" as the delimiters (both strings contain a single,\n * balanced instance of \"<x>\").\n *\n * examples:\n * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n * returns: []\n * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n * returns: [\"t<<e>><s>\", \"\"]\n * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n * returns: [\"test\"]\n */\nshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n  'use strict'\n\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\n    results = []\n\n  for (var i = 0; i < matchPos.length; ++i) {\n    results.push([\n      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n      str.slice(matchPos[i].match.start, matchPos[i].match.end),\n      str.slice(matchPos[i].left.start, matchPos[i].left.end),\n      str.slice(matchPos[i].right.start, matchPos[i].right.end)\n    ])\n  }\n  return results\n}\n\n/**\n *\n * @param {string} str\n * @param {string|function} replacement\n * @param {string} left\n * @param {string} right\n * @param {string} flags\n * @returns {string}\n */\nshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n  'use strict'\n\n  if (!showdown.helper.isFunction(replacement)) {\n    var repStr = replacement\n    replacement = function () {\n      return repStr\n    }\n  }\n\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\n    finalStr = str,\n    lng = matchPos.length\n\n  if (lng > 0) {\n    var bits = []\n    if (matchPos[0].wholeMatch.start !== 0) {\n      bits.push(str.slice(0, matchPos[0].wholeMatch.start))\n    }\n    for (var i = 0; i < lng; ++i) {\n      bits.push(\n        replacement(\n          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n          str.slice(matchPos[i].match.start, matchPos[i].match.end),\n          str.slice(matchPos[i].left.start, matchPos[i].left.end),\n          str.slice(matchPos[i].right.start, matchPos[i].right.end)\n        )\n      )\n      if (i < lng - 1) {\n        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start))\n      }\n    }\n    if (matchPos[lng - 1].wholeMatch.end < str.length) {\n      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end))\n    }\n    finalStr = bits.join('')\n  }\n  return finalStr\n}\n\n/**\n * POLYFILLS\n */\nif (showdown.helper.isUndefined(console)) {\n  console = {\n    warn: function (msg) {\n      'use strict'\n      alert(msg)\n    },\n    log: function (msg) {\n      'use strict'\n      alert(msg)\n    },\n    error: function (msg) {\n      'use strict'\n      throw msg\n    }\n  }\n}\n\n/**\n * Created by Estevao on 31-05-2015.\n */\n\n/**\n * Showdown Converter class\n * @class\n * @param {object} [converterOptions]\n * @returns {Converter}\n */\nshowdown.Converter = function (converterOptions) {\n  'use strict'\n\n  var\n    /**\n     * Options used by this converter\n     * @private\n     * @type {{}}\n     */\n    options = {},\n\n    /**\n     * Language extensions used by this converter\n     * @private\n     * @type {Array}\n     */\n    langExtensions = [],\n\n    /**\n     * Output modifiers extensions used by this converter\n     * @private\n     * @type {Array}\n     */\n    outputModifiers = [],\n\n    /**\n     * Event listeners\n     * @private\n     * @type {{}}\n     */\n    listeners = {}\n\n  _constructor()\n\n  /**\n   * Converter constructor\n   * @private\n   */\n  function _constructor () {\n    converterOptions = converterOptions || {}\n\n    for (var gOpt in globalOptions) {\n      if (globalOptions.hasOwnProperty(gOpt)) {\n        options[gOpt] = globalOptions[gOpt]\n      }\n    }\n\n    // Merge options\n    if (typeof converterOptions === 'object') {\n      for (var opt in converterOptions) {\n        if (converterOptions.hasOwnProperty(opt)) {\n          options[opt] = converterOptions[opt]\n        }\n      }\n    } else {\n      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\n        ' was passed instead.')\n    }\n\n    if (options.extensions) {\n      showdown.helper.forEach(options.extensions, _parseExtension)\n    }\n  }\n\n  /**\n   * Parse extension\n   * @param {*} ext\n   * @param {string} [name='']\n   * @private\n   */\n  function _parseExtension (ext, name) {\n\n    name = name || null\n    // If it's a string, the extension was previously loaded\n    if (showdown.helper.isString(ext)) {\n      ext = showdown.helper.stdExtName(ext)\n      name = ext\n\n      // LEGACY_SUPPORT CODE\n      if (showdown.extensions[ext]) {\n        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\n          'Please inform the developer that the extension should be updated!')\n        legacyExtensionLoading(showdown.extensions[ext], ext)\n        return\n        // END LEGACY SUPPORT CODE\n\n      } else if (!showdown.helper.isUndefined(extensions[ext])) {\n        ext = extensions[ext]\n\n      } else {\n        throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.')\n      }\n    }\n\n    if (typeof ext === 'function') {\n      ext = ext()\n    }\n\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext]\n    }\n\n    var validExt = validate(ext, name)\n    if (!validExt.valid) {\n      throw Error(validExt.error)\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n\n        case 'lang':\n          langExtensions.push(ext[i])\n          break\n\n        case 'output':\n          outputModifiers.push(ext[i])\n          break\n      }\n      if (ext[i].hasOwnProperty(listeners)) {\n        for (var ln in ext[i].listeners) {\n          if (ext[i].listeners.hasOwnProperty(ln)) {\n            listen(ln, ext[i].listeners[ln])\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * LEGACY_SUPPORT\n   * @param {*} ext\n   * @param {string} name\n   */\n  function legacyExtensionLoading (ext, name) {\n    if (typeof ext === 'function') {\n      ext = ext(new showdown.Converter())\n    }\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext]\n    }\n    var valid = validate(ext, name)\n\n    if (!valid.valid) {\n      throw Error(valid.error)\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n        case 'lang':\n          langExtensions.push(ext[i])\n          break\n        case 'output':\n          outputModifiers.push(ext[i])\n          break\n        default:// should never reach here\n          throw Error('Extension loader error: Type unrecognized!!!')\n      }\n    }\n  }\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   */\n  function listen (name, callback) {\n    if (!showdown.helper.isString(name)) {\n      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given')\n    }\n\n    if (typeof callback !== 'function') {\n      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given')\n    }\n\n    if (!listeners.hasOwnProperty(name)) {\n      listeners[name] = []\n    }\n    listeners[name].push(callback)\n  }\n\n  function rTrimInputText (text) {\n    var rsp = text.match(/^\\s*/)[0].length,\n      rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm')\n    return text.replace(rgx, '')\n  }\n\n  /**\n   * Dispatch an event\n   * @private\n   * @param {string} evtName Event name\n   * @param {string} text Text\n   * @param {{}} options Converter Options\n   * @param {{}} globals\n   * @returns {string}\n   */\n  this._dispatch = function dispatch (evtName, text, options, globals) {\n    if (listeners.hasOwnProperty(evtName)) {\n      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n        var nText = listeners[evtName][ei](evtName, text, this, options, globals)\n        if (nText && typeof nText !== 'undefined') {\n          text = nText\n        }\n      }\n    }\n    return text\n  }\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   * @returns {showdown.Converter}\n   */\n  this.listen = function (name, callback) {\n    listen(name, callback)\n    return this\n  }\n\n  /**\n   * Converts a markdown string into HTML\n   * @param {string} text\n   * @returns {*}\n   */\n  this.makeHtml = function (text) {\n    //check if text is not falsy\n    if (!text) {\n      return text\n    }\n\n    var globals = {\n      gHtmlBlocks: [],\n      gHtmlMdBlocks: [],\n      gHtmlSpans: [],\n      gUrls: {},\n      gTitles: {},\n      gDimensions: {},\n      gListLevel: 0,\n      hashLinkCounts: {},\n      langExtensions: langExtensions,\n      outputModifiers: outputModifiers,\n      converter: this,\n      ghCodeBlocks: []\n    }\n\n    // attacklab: Replace ~ with ~T\n    // This lets us use tilde as an escape char to avoid md5 hashes\n    // The choice of character is arbitrary; anything that isn't\n    // magic in Markdown will work.\n    text = text.replace(/~/g, '~T')\n\n    // attacklab: Replace $ with ~D\n    // RegExp interprets $ as a special character\n    // when it's in a replacement string\n    text = text.replace(/\\$/g, '~D')\n\n    // Standardize line endings\n    text = text.replace(/\\r\\n/g, '\\n') // DOS to Unix\n    text = text.replace(/\\r/g, '\\n') // Mac to Unix\n\n    if (options.smartIndentationFix) {\n      text = rTrimInputText(text)\n    }\n\n    // Make sure text begins and ends with a couple of newlines:\n    //text = '\\n\\n' + text + '\\n\\n';\n    text = text\n    // detab\n    text = showdown.subParser('detab')(text, options, globals)\n\n    // stripBlankLines\n    text = showdown.subParser('stripBlankLines')(text, options, globals)\n\n    //run languageExtensions\n    showdown.helper.forEach(langExtensions, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals)\n    })\n\n    // run the sub parsers\n    text = showdown.subParser('hashPreCodeTags')(text, options, globals)\n    text = showdown.subParser('githubCodeBlocks')(text, options, globals)\n    text = showdown.subParser('hashHTMLBlocks')(text, options, globals)\n    text = showdown.subParser('hashHTMLSpans')(text, options, globals)\n    text = showdown.subParser('stripLinkDefinitions')(text, options, globals)\n    text = showdown.subParser('blockGamut')(text, options, globals)\n    text = showdown.subParser('unhashHTMLSpans')(text, options, globals)\n    text = showdown.subParser('unescapeSpecialChars')(text, options, globals)\n\n    // attacklab: Restore dollar signs\n    text = text.replace(/~D/g, '$$')\n\n    // attacklab: Restore tildes\n    text = text.replace(/~T/g, '~')\n\n    // Run output modifiers\n    showdown.helper.forEach(outputModifiers, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals)\n    })\n    return text\n  }\n\n  /**\n   * Set an option of this Converter instance\n   * @param {string} key\n   * @param {*} value\n   */\n  this.setOption = function (key, value) {\n    options[key] = value\n  }\n\n  /**\n   * Get the option of this Converter instance\n   * @param {string} key\n   * @returns {*}\n   */\n  this.getOption = function (key) {\n    return options[key]\n  }\n\n  /**\n   * Get the options of this Converter instance\n   * @returns {{}}\n   */\n  this.getOptions = function () {\n    return options\n  }\n\n  /**\n   * Add extension to THIS converter\n   * @param {{}} extension\n   * @param {string} [name=null]\n   */\n  this.addExtension = function (extension, name) {\n    name = name || null\n    _parseExtension(extension, name)\n  }\n\n  /**\n   * Use a global registered extension with THIS converter\n   * @param {string} extensionName Name of the previously registered extension\n   */\n  this.useExtension = function (extensionName) {\n    _parseExtension(extensionName)\n  }\n\n  /**\n   * Set the flavor THIS converter should use\n   * @param {string} name\n   */\n  this.setFlavor = function (name) {\n    if (flavor.hasOwnProperty(name)) {\n      var preset = flavor[name]\n      for (var option in preset) {\n        if (preset.hasOwnProperty(option)) {\n          options[option] = preset[option]\n        }\n      }\n    }\n  }\n\n  /**\n   * Remove an extension from THIS converter.\n   * Note: This is a costly operation. It's better to initialize a new converter\n   * and specify the extensions you wish to use\n   * @param {Array} extension\n   */\n  this.removeExtension = function (extension) {\n    if (!showdown.helper.isArray(extension)) {\n      extension = [extension]\n    }\n    for (var a = 0; a < extension.length; ++a) {\n      var ext = extension[a]\n      for (var i = 0; i < langExtensions.length; ++i) {\n        if (langExtensions[i] === ext) {\n          langExtensions[i].splice(i, 1)\n        }\n      }\n      for (var ii = 0; ii < outputModifiers.length; ++i) {\n        if (outputModifiers[ii] === ext) {\n          outputModifiers[ii].splice(i, 1)\n        }\n      }\n    }\n  }\n\n  /**\n   * Get all extension of THIS converter\n   * @returns {{language: Array, output: Array}}\n   */\n  this.getAllExtensions = function () {\n    return {\n      language: langExtensions,\n      output: outputModifiers\n    }\n  }\n}\n\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('anchors', function (text, options, globals) {\n  'use strict'\n\n  text = globals.converter._dispatch('anchors.before', text, options, globals)\n\n  var writeAnchorTag = function (wholeMatch, m1, m2, m3, m4, m5, m6, m7) {\n    if (showdown.helper.isUndefined(m7)) {\n      m7 = ''\n    }\n    wholeMatch = m1\n    var linkText = m2,\n      linkId = m3.toLowerCase(),\n      url = m4,\n      title = m7\n\n    if (!url) {\n      if (!linkId) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ')\n      }\n      url = '#' + linkId\n\n      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n        url = globals.gUrls[linkId]\n        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n          title = globals.gTitles[linkId]\n        }\n      } else {\n        if (wholeMatch.search(/\\(\\s*\\)$/m) > -1) {\n          // Special case for explicit empty url\n          url = ''\n        } else {\n          return wholeMatch\n        }\n      }\n    }\n\n    url = showdown.helper.escapeCharacters(url, '*_', false)\n    var result = '<a href=\"' + url + '\"'\n\n    if (title !== '' && title !== null) {\n      title = title.replace(/\"/g, '&quot;')\n      title = showdown.helper.escapeCharacters(title, '*_', false)\n      result += ' title=\"' + title + '\"'\n    }\n\n    result += '>' + linkText + '</a>'\n\n    return result\n  }\n\n  // First, handle reference-style links: [link text] [id]\n  /*\n   text = text.replace(/\n   (\t\t\t\t\t\t\t// wrap whole match in $1\n   \\[\n   (\n   (?:\n   \\[[^\\]]*\\]\t\t// allow brackets nested one level\n   |\n   [^\\[]\t\t\t// or anything else\n   )*\n   )\n   \\]\n\n   [ ]?\t\t\t\t\t// one optional space\n   (?:\\n[ ]*)?\t\t\t\t// one optional newline followed by spaces\n\n   \\[\n   (.*?)\t\t\t\t\t// id = $3\n   \\]\n   )()()()()\t\t\t\t\t// pad remaining backreferences\n   /g,_DoAnchors_callback);\n   */\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)][ ]?(?:\\n[ ]*)?\\[(.*?)])()()()()/g, writeAnchorTag)\n\n  //\n  // Next, inline-style links: [link text](url \"optional title\")\n  //\n\n  /*\n   text = text.replace(/\n   (\t\t\t\t\t\t// wrap whole match in $1\n   \\[\n   (\n   (?:\n   \\[[^\\]]*\\]\t// allow brackets nested one level\n   |\n   [^\\[\\]]\t\t\t// or anything else\n   )\n   )\n   \\]\n   \\(\t\t\t\t\t\t// literal paren\n   [ \\t]*\n   ()\t\t\t\t\t\t// no id, so leave $3 empty\n   <?(.*?)>?\t\t\t\t// href = $4\n   [ \\t]*\n   (\t\t\t\t\t\t// $5\n   (['\"])\t\t\t\t// quote char = $6\n   (.*?)\t\t\t\t// Title = $7\n   \\6\t\t\t\t\t// matching quote\n   [ \\t]*\t\t\t\t// ignore any spaces/tabs between closing quote and )\n   )?\t\t\t\t\t\t// title is optional\n   \\)\n   )\n   /g,writeAnchorTag);\n   */\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]\\([ \\t]*()<?(.*?(?:\\(.*?\\).*?)?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g,\n    writeAnchorTag)\n\n  //\n  // Last, handle reference-style shortcuts: [link text]\n  // These must come last in case you've also got [link test][1]\n  // or [link test](/foo)\n  //\n\n  /*\n   text = text.replace(/\n   (                // wrap whole match in $1\n   \\[\n   ([^\\[\\]]+)       // link text = $2; can't contain '[' or ']'\n   \\]\n   )()()()()()      // pad rest of backreferences\n   /g, writeAnchorTag);\n   */\n  text = text.replace(/(\\[([^\\[\\]]+)])()()()()()/g, writeAnchorTag)\n\n  text = globals.converter._dispatch('anchors.after', text, options, globals)\n  return text\n})\n\nshowdown.subParser('autoLinks', function (text, options, globals) {\n  'use strict'\n\n  text = globals.converter._dispatch('autoLinks.before', text, options, globals)\n\n  var simpleURLRegex = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+)(?=\\s|$)(?![\"<>])/gi,\n    delimUrlRegex = /<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)>/gi,\n    simpleMailRegex = /(?:^|[ \\n\\t])([A-Za-z0-9!#$%&'*+-/=?^_`\\{|}~\\.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?:$|[ \\n\\t])/gi,\n    delimMailRegex = /<(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi\n\n  text = text.replace(delimUrlRegex, replaceLink)\n  text = text.replace(delimMailRegex, replaceMail)\n  // simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[-.+~:?#@!$&'()*,;=[\\]\\w]+)\\b/gi,\n  // Email addresses: <address@domain.foo>\n\n  if (options.simplifiedAutoLink) {\n    text = text.replace(simpleURLRegex, replaceLink)\n    text = text.replace(simpleMailRegex, replaceMail)\n  }\n\n  function replaceLink (wm, link) {\n    var lnkTxt = link\n    if (/^www\\./i.test(link)) {\n      link = link.replace(/^www\\./i, 'http://www.')\n    }\n    return '<a href=\"' + link + '\">' + lnkTxt + '</a>'\n  }\n\n  function replaceMail (wholeMatch, m1) {\n    var unescapedStr = showdown.subParser('unescapeSpecialChars')(m1)\n    return showdown.subParser('encodeEmailAddress')(unescapedStr)\n  }\n\n  text = globals.converter._dispatch('autoLinks.after', text, options, globals)\n\n  return text\n})\n\n/**\n * These are all the transformations that form block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('blockGamut', function (text, options, globals) {\n  'use strict'\n\n  text = globals.converter._dispatch('blockGamut.before', text, options, globals)\n\n  // we parse blockquotes first so that we can have headings and hrs\n  // inside blockquotes\n  text = showdown.subParser('blockQuotes')(text, options, globals)\n  text = showdown.subParser('headers')(text, options, globals)\n\n  // Do Horizontal Rules:\n  var key = showdown.subParser('hashBlock')('<hr />', options, globals)\n  text = text.replace(/^[ ]{0,2}([ ]?\\*[ ]?){3,}[ \\t]*$/gm, key)\n  text = text.replace(/^[ ]{0,2}([ ]?\\-[ ]?){3,}[ \\t]*$/gm, key)\n  text = text.replace(/^[ ]{0,2}([ ]?_[ ]?){3,}[ \\t]*$/gm, key)\n\n  text = showdown.subParser('lists')(text, options, globals)\n  text = showdown.subParser('codeBlocks')(text, options, globals)\n  text = showdown.subParser('tables')(text, options, globals)\n\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n  // was to escape raw HTML in the original Markdown source. This time,\n  // we're escaping the markup we've just created, so that we don't wrap\n  // <p> tags around block-level tags.\n  text = showdown.subParser('hashHTMLBlocks')(text, options, globals)\n  text = showdown.subParser('paragraphs')(text, options, globals)\n\n  text = globals.converter._dispatch('blockGamut.after', text, options, globals)\n\n  return text\n})\n\nshowdown.subParser('blockQuotes', function (text, options, globals) {\n  'use strict'\n\n  text = globals.converter._dispatch('blockQuotes.before', text, options, globals)\n  /*\n   text = text.replace(/\n   (\t\t\t\t\t\t\t\t// Wrap whole match in $1\n   (\n   ^[ \\t]*>[ \\t]?\t\t\t// '>' at the start of a line\n   .+\\n\t\t\t\t\t// rest of the first line\n   (.+\\n)*\t\t\t\t\t// subsequent consecutive lines\n   \\n*\t\t\t\t\t\t// blanks\n   )+\n   )\n   /gm, function(){...});\n   */\n\n  text = text.replace(/((^[ \\t]{0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+)/gm, function (wholeMatch, m1) {\n    var bq = m1\n\n    // attacklab: hack around Konqueror 3.5.4 bug:\n    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n    bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, '~0') // trim one level of quoting\n\n    // attacklab: clean up hack\n    bq = bq.replace(/~0/g, '')\n\n    bq = bq.replace(/^[ \\t]+$/gm, '') // trim whitespace-only lines\n    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals)\n    bq = showdown.subParser('blockGamut')(bq, options, globals) // recurse\n\n    bq = bq.replace(/(^|\\n)/g, '$1  ')\n    // These leading spaces screw with <pre> content, so we need to fix that:\n    bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n      var pre = m1\n      // attacklab: hack around Konqueror 3.5.4 bug:\n      pre = pre.replace(/^  /mg, '~0')\n      pre = pre.replace(/~0/g, '')\n      return pre\n    })\n\n    return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals)\n  })\n\n  text = globals.converter._dispatch('blockQuotes.after', text, options, globals)\n  return text\n})\n\n/**\n * Process Markdown `<pre><code>` blocks.\n */\nshowdown.subParser('codeBlocks', function (text, options, globals) {\n  'use strict'\n\n  text = globals.converter._dispatch('codeBlocks.before', text, options, globals)\n  /*\n   text = text.replace(text,\n   /(?:\\n\\n|^)\n   (\t\t\t\t\t\t\t\t// $1 = the code block -- one or more lines, starting with a space/tab\n   (?:\n   (?:[ ]{4}|\\t)\t\t\t// Lines must start with a tab or a tab-width of spaces - attacklab: g_tab_width\n   .*\\n+\n   )+\n   )\n   (\\n*[ ]{0,3}[^ \\t\\n]|(?=~0))\t// attacklab: g_tab_width\n   /g,function(){...});\n   */\n\n  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '~0'\n\n  var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=~0))/g\n  text = text.replace(pattern, function (wholeMatch, m1, m2) {\n    var codeblock = m1,\n      nextChar = m2,\n      end = '\\n'\n\n    codeblock = showdown.subParser('outdent')(codeblock)\n    codeblock = showdown.subParser('encodeCode')(codeblock)\n    codeblock = showdown.subParser('detab')(codeblock)\n    codeblock = codeblock.replace(/^\\n+/g, '') // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, '') // trim trailing newlines\n\n    if (options.omitExtraWLInCodeBlocks) {\n      end = ''\n    }\n\n    codeblock = '<pre><code>' + codeblock + end + '</code></pre>'\n\n    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar\n  })\n\n  // attacklab: strip sentinel\n  text = text.replace(/~0/, '')\n\n  text = globals.converter._dispatch('codeBlocks.after', text, options, globals)\n  return text\n})\n\n/**\n *\n *   *  Backtick quotes are used for <code></code> spans.\n *\n *   *  You can use multiple backticks as the delimiters if you want to\n *     include literal backticks in the code span. So, this input:\n *\n *         Just type ``foo `bar` baz`` at the prompt.\n *\n *       Will translate to:\n *\n *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n *\n *    There's no arbitrary limit to the number of backticks you\n *    can use as delimters. If you need three consecutive backticks\n *    in your code, use four for delimiters, etc.\n *\n *  *  You can use spaces to get literal backticks at the edges:\n *\n *         ... type `` `bar` `` ...\n *\n *       Turns to:\n *\n *         ... type <code>`bar`</code> ...\n */\nshowdown.subParser('codeSpans', function (text, options, globals) {\n  'use strict'\n\n  text = globals.converter._dispatch('codeSpans.before', text, options, globals)\n\n  /*\n   text = text.replace(/\n   (^|[^\\\\])\t\t\t\t\t// Character before opening ` can't be a backslash\n   (`+)\t\t\t\t\t\t// $2 = Opening run of `\n   (\t\t\t\t\t\t\t// $3 = The code block\n   [^\\r]*?\n   [^`]\t\t\t\t\t// attacklab: work around lack of lookbehind\n   )\n   \\2\t\t\t\t\t\t\t// Matching closer\n   (?!`)\n   /gm, function(){...});\n   */\n\n  if (typeof(text) === 'undefined') {\n    text = ''\n  }\n  text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,\n    function (wholeMatch, m1, m2, m3) {\n      var c = m3\n      c = c.replace(/^([ \\t]*)/g, '')\t// leading whitespace\n      c = c.replace(/[ \\t]*$/g, '')\t// trailing whitespace\n      c = showdown.subParser('encodeCode')(c)\n      return m1 + '<code>' + c + '</code>'\n    }\n  )\n\n  text = globals.converter._dispatch('codeSpans.after', text, options, globals)\n  return text\n})\n\n/**\n * Convert all tabs to spaces\n */\nshowdown.subParser('detab', function (text) {\n  'use strict'\n\n  // expand first n-1 tabs\n  text = text.replace(/\\t(?=\\t)/g, '    ') // g_tab_width\n\n  // replace the nth with two sentinels\n  text = text.replace(/\\t/g, '~A~B')\n\n  // use the sentinel to anchor our regex so it doesn't explode\n  text = text.replace(/~B(.+?)~A/g, function (wholeMatch, m1) {\n    var leadingText = m1,\n      numSpaces = 4 - leadingText.length % 4  // g_tab_width\n\n    // there *must* be a better way to do this:\n    for (var i = 0; i < numSpaces; i++) {\n      leadingText += ' '\n    }\n\n    return leadingText\n  })\n\n  // clean up sentinels\n  text = text.replace(/~A/g, '    ')  // g_tab_width\n  text = text.replace(/~B/g, '')\n\n  return text\n\n})\n\n/**\n * Smart processing for ampersands and angle brackets that need to be encoded.\n */\nshowdown.subParser('encodeAmpsAndAngles', function (text) {\n  'use strict'\n  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n  // http://bumppo.net/projects/amputator/\n  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;')\n\n  // Encode naked <'s\n  text = text.replace(/<(?![a-z\\/?\\$!])/gi, '&lt;')\n\n  return text\n})\n\n/**\n * Returns the string, with after processing the following backslash escape sequences.\n *\n * attacklab: The polite way to do this is with the new escapeCharacters() function:\n *\n *    text = escapeCharacters(text,\"\\\\\",true);\n *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n *\n * ...but we're sidestepping its use of the (slow) RegExp constructor\n * as an optimization for Firefox.  This function gets called a LOT.\n */\nshowdown.subParser('encodeBackslashEscapes', function (text) {\n  'use strict'\n  text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback)\n  text = text.replace(/\\\\([`*_{}\\[\\]()>#+-.!])/g, showdown.helper.escapeCharactersCallback)\n  return text\n})\n\n/**\n * Encode/escape certain characters inside Markdown code runs.\n * The point is that in code, these characters are literals,\n * and lose their special Markdown meanings.\n */\nshowdown.subParser('encodeCode', function (text) {\n  'use strict'\n\n  // Encode all ampersands; HTML entities are not\n  // entities within a Markdown code span.\n  text = text.replace(/&/g, '&amp;')\n\n  // Do the angle bracket song and dance:\n  text = text.replace(/</g, '&lt;')\n  text = text.replace(/>/g, '&gt;')\n\n  // Now, escape characters that are magic in Markdown:\n  text = showdown.helper.escapeCharacters(text, '*_{}[]\\\\', false)\n\n  // jj the line above breaks this:\n  //---\n  //* Item\n  //   1. Subitem\n  //            special char: *\n  // ---\n\n  return text\n})\n\n/**\n *  Input: an email address, e.g. \"foo@example.com\"\n *\n *  Output: the email address as a mailto link, with each character\n *    of the address encoded as either a decimal or hex entity, in\n *    the hopes of foiling most address harvesting spam bots. E.g.:\n *\n *    <a href=\"&#x6D;&#97;&#105;&#108;&#x74;&#111;:&#102;&#111;&#111;&#64;&#101;\n *       x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;\">&#102;&#111;&#111;\n *       &#64;&#101;x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;</a>\n *\n *  Based on a filter by Matthew Wickline, posted to the BBEdit-Talk\n *  mailing list: <http://tinyurl.com/yu7ue>\n *\n */\nshowdown.subParser('encodeEmailAddress', function (addr) {\n  'use strict'\n\n  var encode = [\n    function (ch) {\n      return '&#' + ch.charCodeAt(0) + ';'\n    },\n    function (ch) {\n      return '&#x' + ch.charCodeAt(0).toString(16) + ';'\n    },\n    function (ch) {\n      return ch\n    }\n  ]\n\n  addr = 'mailto:' + addr\n\n  addr = addr.replace(/./g, function (ch) {\n    if (ch === '@') {\n      // this *must* be encoded. I insist.\n      ch = encode[Math.floor(Math.random() * 2)](ch)\n    } else if (ch !== ':') {\n      // leave ':' alone (to spot mailto: later)\n      var r = Math.random()\n      // roughly 10% raw, 45% hex, 45% dec\n      ch = (\n        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\n      )\n    }\n    return ch\n  })\n\n  addr = '<a href=\"' + addr + '\">' + addr + '</a>'\n  addr = addr.replace(/\">.+:/g, '\">') // strip the mailto: from the visible part\n\n  return addr\n})\n\n/**\n * Within tags -- meaning between < and > -- encode [\\ ` * _] so they\n * don't conflict with their use in Markdown for code, italics and strong.\n */\nshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text) {\n  'use strict'\n\n  // Build a regex to find HTML tags and comments.  See Friedl's\n  // \"Mastering Regular Expressions\", 2nd Ed., pp. 200-201.\n  var regex = /(<[a-z\\/!$](\"[^\"]*\"|'[^']*'|[^'\">])*>|<!(--.*?--\\s*)+>)/gi\n\n  text = text.replace(regex, function (wholeMatch) {\n    var tag = wholeMatch.replace(/(.)<\\/?code>(?=.)/g, '$1`')\n    tag = showdown.helper.escapeCharacters(tag, '\\\\`*_', false)\n    return tag\n  })\n\n  return text\n})\n\n/**\n * Handle github codeblocks prior to running HashHTML so that\n * HTML contained within the codeblock gets escaped properly\n * Example:\n * ```ruby\n *     def hello_world(x)\n *       puts \"Hello, #{x}\"\n *     end\n * ```\n */\nshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\n  'use strict'\n\n  // early exit if option is not enabled\n  if (!options.ghCodeBlocks) {\n    return text\n  }\n\n  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals)\n\n  text += '~0'\n\n  text = text.replace(/(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/g, function (wholeMatch, language, codeblock) {\n    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\n'\n\n    // First parse the github code block\n    codeblock = showdown.subParser('encodeCode')(codeblock)\n    codeblock = showdown.subParser('detab')(codeblock)\n    codeblock = codeblock.replace(/^\\n+/g, '') // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, '') // trim trailing whitespace\n\n    codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>'\n\n    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals)\n\n    // Since GHCodeblocks can be false positives, we need to\n    // store the primitive text and the parsed text in a global var,\n    // and then return a token\n    return '\\n\\n~G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n'\n  })\n\n  // attacklab: strip sentinel\n  text = text.replace(/~0/, '')\n\n  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals)\n})\n\nshowdown.subParser('hashBlock', function (text, options, globals) {\n  'use strict'\n  text = text.replace(/(^\\n+|\\n+$)/g, '')\n  return '\\n\\n~K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n'\n})\n\nshowdown.subParser('hashElement', function (text, options, globals) {\n  'use strict'\n\n  return function (wholeMatch, m1) {\n    var blockText = m1\n\n    // Undo double lines\n    blockText = blockText.replace(/\\n\\n/g, '\\n')\n    blockText = blockText.replace(/^\\n/, '')\n\n    // strip trailing blank lines\n    blockText = blockText.replace(/\\n+$/g, '')\n\n    // Replace the element text with a marker (\"~KxK\" where x is its key)\n    blockText = '\\n\\n~K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n'\n\n    return blockText\n  }\n})\n\nshowdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n  'use strict'\n\n  var blockTags = [\n      'pre',\n      'div',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'table',\n      'dl',\n      'ol',\n      'ul',\n      'script',\n      'noscript',\n      'form',\n      'fieldset',\n      'iframe',\n      'math',\n      'style',\n      'section',\n      'header',\n      'footer',\n      'nav',\n      'article',\n      'aside',\n      'address',\n      'audio',\n      'canvas',\n      'figure',\n      'hgroup',\n      'output',\n      'video',\n      'p'\n    ],\n    repFunc = function (wholeMatch, match, left, right) {\n      var txt = wholeMatch\n      // check if this html element is marked as markdown\n      // if so, it's contents should be parsed as markdown\n      if (left.search(/\\bmarkdown\\b/) !== -1) {\n        txt = left + globals.converter.makeHtml(match) + right\n      }\n      return '\\n\\n~K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n'\n    }\n\n  for (var i = 0; i < blockTags.length; ++i) {\n    text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^(?: |\\\\t){0,3}<' + blockTags[i] + '\\\\b[^>]*>', '</' + blockTags[i] + '>', 'gim')\n  }\n\n  // HR SPECIAL CASE\n  text = text.replace(/(\\n[ ]{0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals))\n\n  // Special case for standalone HTML comments:\n  text = text.replace(/(<!--[\\s\\S]*?-->)/g,\n    showdown.subParser('hashElement')(text, options, globals))\n\n  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n  text = text.replace(/(?:\\n\\n)([ ]{0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals))\n  return text\n})\n\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashHTMLSpans', function (text, config, globals) {\n  'use strict'\n\n  var matches = showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi')\n\n  for (var i = 0; i < matches.length; ++i) {\n    text = text.replace(matches[i][0], '~L' + (globals.gHtmlSpans.push(matches[i][0]) - 1) + 'L')\n  }\n  return text\n})\n\n/**\n * Unhash HTML spans\n */\nshowdown.subParser('unhashHTMLSpans', function (text, config, globals) {\n  'use strict'\n\n  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n    text = text.replace('~L' + i + 'L', globals.gHtmlSpans[i])\n  }\n\n  return text\n})\n\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashPreCodeTags', function (text, config, globals) {\n  'use strict'\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    // encode html entities\n    var codeblock = left + showdown.subParser('encodeCode')(match) + right\n    return '\\n\\n~G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n'\n  }\n\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^(?: |\\\\t){0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^(?: |\\\\t){0,3}</code>\\\\s*</pre>', 'gim')\n  return text\n})\n\nshowdown.subParser('headers', function (text, options, globals) {\n  'use strict'\n\n  text = globals.converter._dispatch('headers.before', text, options, globals)\n\n  var prefixHeader = options.prefixHeaderId,\n    headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\n\n    // Set text-style headers:\n    //\tHeader 1\n    //\t========\n    //\n    //\tHeader 2\n    //\t--------\n    //\n    setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n    setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm\n\n  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n      hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n      hLevel = headerLevelStart,\n      hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>'\n    return showdown.subParser('hashBlock')(hashBlock, options, globals)\n  })\n\n  text = text.replace(setextRegexH2, function (matchFound, m1) {\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n      hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n      hLevel = headerLevelStart + 1,\n      hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>'\n    return showdown.subParser('hashBlock')(hashBlock, options, globals)\n  })\n\n  // atx-style headers:\n  //  # Header 1\n  //  ## Header 2\n  //  ## Header 2 with closing hashes ##\n  //  ...\n  //  ###### Header 6\n  //\n  text = text.replace(/^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm, function (wholeMatch, m1, m2) {\n    var span = showdown.subParser('spanGamut')(m2, options, globals),\n      hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m2) + '\"',\n      hLevel = headerLevelStart - 1 + m1.length,\n      header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>'\n\n    return showdown.subParser('hashBlock')(header, options, globals)\n  })\n\n  function headerId (m) {\n    var title, escapedId = m.replace(/[^\\w]/g, '').toLowerCase()\n\n    if (globals.hashLinkCounts[escapedId]) {\n      title = escapedId + '-' + (globals.hashLinkCounts[escapedId]++)\n    } else {\n      title = escapedId\n      globals.hashLinkCounts[escapedId] = 1\n    }\n\n    // Prefix id to prevent causing inadvertent pre-existing style matches.\n    if (prefixHeader === true) {\n      prefixHeader = 'section'\n    }\n\n    if (showdown.helper.isString(prefixHeader)) {\n      return prefixHeader + title\n    }\n    return title\n  }\n\n  text = globals.converter._dispatch('headers.after', text, options, globals)\n  return text\n})\n\n/**\n * Turn Markdown image shortcuts into <img> tags.\n */\nshowdown.subParser('images', function (text, options, globals) {\n  'use strict'\n\n  text = globals.converter._dispatch('images.before', text, options, globals)\n\n  var inlineRegExp = /!\\[(.*?)]\\s?\\([ \\t]*()<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(['\"])(.*?)\\6[ \\t]*)?\\)/g,\n    referenceRegExp = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[(.*?)]()()()()()/g\n\n  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\n\n    var gUrls = globals.gUrls,\n      gTitles = globals.gTitles,\n      gDims = globals.gDimensions\n\n    linkId = linkId.toLowerCase()\n\n    if (!title) {\n      title = ''\n    }\n\n    if (url === '' || url === null) {\n      if (linkId === '' || linkId === null) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ')\n      }\n      url = '#' + linkId\n\n      if (!showdown.helper.isUndefined(gUrls[linkId])) {\n        url = gUrls[linkId]\n        if (!showdown.helper.isUndefined(gTitles[linkId])) {\n          title = gTitles[linkId]\n        }\n        if (!showdown.helper.isUndefined(gDims[linkId])) {\n          width = gDims[linkId].width\n          height = gDims[linkId].height\n        }\n      } else {\n        return wholeMatch\n      }\n    }\n\n    altText = altText.replace(/\"/g, '&quot;')\n    altText = showdown.helper.escapeCharacters(altText, '*_', false)\n    url = showdown.helper.escapeCharacters(url, '*_', false)\n    var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"'\n\n    if (title) {\n      title = title.replace(/\"/g, '&quot;')\n      title = showdown.helper.escapeCharacters(title, '*_', false)\n      result += ' title=\"' + title + '\"'\n    }\n\n    if (width && height) {\n      width = (width === '*') ? 'auto' : width\n      height = (height === '*') ? 'auto' : height\n\n      result += ' width=\"' + width + '\"'\n      result += ' height=\"' + height + '\"'\n    }\n\n    result += ' />'\n    return result\n  }\n\n  // First, handle reference-style labeled images: ![alt text][id]\n  text = text.replace(referenceRegExp, writeImageTag)\n\n  // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n  text = text.replace(inlineRegExp, writeImageTag)\n\n  text = globals.converter._dispatch('images.after', text, options, globals)\n  return text\n})\n\nshowdown.subParser('italicsAndBold', function (text, options, globals) {\n  'use strict'\n\n  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals)\n\n  if (options.literalMidWordUnderscores) {\n    //underscores\n    // Since we are consuming a \\s character, we need to add it\n    text = text.replace(/(^|\\s|>|\\b)__(?=\\S)([\\s\\S]+?)__(?=\\b|<|\\s|$)/gm, '$1<strong>$2</strong>')\n    text = text.replace(/(^|\\s|>|\\b)_(?=\\S)([\\s\\S]+?)_(?=\\b|<|\\s|$)/gm, '$1<em>$2</em>')\n    //asterisks\n    text = text.replace(/(\\*\\*)(?=\\S)([^\\r]*?\\S[*]*)\\1/g, '<strong>$2</strong>')\n    text = text.replace(/(\\*)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>')\n\n  } else {\n    // <strong> must go first:\n    text = text.replace(/(\\*\\*|__)(?=\\S)([^\\r]*?\\S[*_]*)\\1/g, '<strong>$2</strong>')\n    text = text.replace(/(\\*|_)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>')\n  }\n\n  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals)\n  return text\n})\n\n/**\n * Form HTML ordered (numbered) and unordered (bulleted) lists.\n */\nshowdown.subParser('lists', function (text, options, globals) {\n  'use strict'\n\n  text = globals.converter._dispatch('lists.before', text, options, globals)\n  /**\n   * Process the contents of a single ordered or unordered list, splitting it\n   * into individual list items.\n   * @param {string} listStr\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function processListItems (listStr, trimTrailing) {\n    // The $g_list_level global keeps track of when we're inside a list.\n    // Each time we enter a list, we increment it; when we leave a list,\n    // we decrement. If it's zero, we're not in a list anymore.\n    //\n    // We do this because when we're not inside a list, we want to treat\n    // something like this:\n    //\n    //    I recommend upgrading to version\n    //    8. Oops, now this line is treated\n    //    as a sub-list.\n    //\n    // As a single paragraph, despite the fact that the second line starts\n    // with a digit-period-space sequence.\n    //\n    // Whereas when we're inside a list (or sub-list), that line will be\n    // treated as the start of a sub-list. What a kludge, huh? This is\n    // an aspect of Markdown's syntax that's hard to parse perfectly\n    // without resorting to mind-reading. Perhaps the solution is to\n    // change the syntax rules such that sub-lists must start with a\n    // starting cardinal number; e.g. \"1.\" or \"a.\".\n    globals.gListLevel++\n\n    // trim trailing blank lines:\n    listStr = listStr.replace(/\\n{2,}$/, '\\n')\n\n    // attacklab: add sentinel to emulate \\z\n    listStr += '~0'\n\n    var rgx = /(\\n)?(^[ \\t]*)([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(~0|\\2([*+-]|\\d+[.])[ \\t]+))/gm,\n      isParagraphed = (/\\n[ \\t]*\\n(?!~0)/.test(listStr))\n\n    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n      checked = (checked && checked.trim() !== '')\n      var item = showdown.subParser('outdent')(m4, options, globals),\n        bulletStyle = ''\n\n      // Support for github tasklists\n      if (taskbtn && options.tasklists) {\n        bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"'\n        item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n          var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"'\n          if (checked) {\n            otp += ' checked'\n          }\n          otp += '>'\n          return otp\n        })\n      }\n      // m1 - Leading line or\n      // Has a double return (multi paragraph) or\n      // Has sublist\n      if (m1 || (item.search(/\\n{2,}/) > -1)) {\n        item = showdown.subParser('githubCodeBlocks')(item, options, globals)\n        item = showdown.subParser('blockGamut')(item, options, globals)\n      } else {\n        // Recursion for sub-lists:\n        item = showdown.subParser('lists')(item, options, globals)\n        item = item.replace(/\\n$/, '') // chomp(item)\n        if (isParagraphed) {\n          item = showdown.subParser('paragraphs')(item, options, globals)\n        } else {\n          item = showdown.subParser('spanGamut')(item, options, globals)\n        }\n      }\n      item = '\\n<li' + bulletStyle + '>' + item + '</li>\\n'\n      return item\n    })\n\n    // attacklab: strip sentinel\n    listStr = listStr.replace(/~0/g, '')\n\n    globals.gListLevel--\n\n    if (trimTrailing) {\n      listStr = listStr.replace(/\\s+$/, '')\n    }\n\n    return listStr\n  }\n\n  /**\n   * Check and parse consecutive lists (better fix for issue #142)\n   * @param {string} list\n   * @param {string} listType\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function parseConsecutiveLists (list, listType, trimTrailing) {\n    // check if we caught 2 or more consecutive lists by mistake\n    // we use the counterRgx, meaning if listType is UL we look for UL and vice versa\n    var counterRxg = (listType === 'ul') ? /^ {0,2}\\d+\\.[ \\t]/gm : /^ {0,2}[*+-][ \\t]/gm,\n      subLists = [],\n      result = ''\n\n    if (list.search(counterRxg) !== -1) {\n      (function parseCL (txt) {\n        var pos = txt.search(counterRxg)\n        if (pos !== -1) {\n          // slice\n          result += '\\n\\n<' + listType + '>' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n\\n'\n\n          // invert counterType and listType\n          listType = (listType === 'ul') ? 'ol' : 'ul'\n          counterRxg = (listType === 'ul') ? /^ {0,2}\\d+\\.[ \\t]/gm : /^ {0,2}[*+-][ \\t]/gm\n\n          //recurse\n          parseCL(txt.slice(pos))\n        } else {\n          result += '\\n\\n<' + listType + '>' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n\\n'\n        }\n      })(list)\n      for (var i = 0; i < subLists.length; ++i) {\n\n      }\n    } else {\n      result = '\\n\\n<' + listType + '>' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n\\n'\n    }\n\n    return result\n  }\n\n  // attacklab: add sentinel to hack around khtml/safari bug:\n  // http://bugs.webkit.org/show_bug.cgi?id=11231\n  text += '~0'\n\n  // Re-usable pattern to match any entire ul or ol list:\n  var wholeList = /^(([ ]{0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm\n\n  if (globals.gListLevel) {\n    text = text.replace(wholeList, function (wholeMatch, list, m2) {\n      var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol'\n      return parseConsecutiveLists(list, listType, true)\n    })\n  } else {\n    wholeList = /(\\n\\n|^\\n?)(([ ]{0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm\n    //wholeList = /(\\n\\n|^\\n?)( {0,3}([*+-]|\\d+\\.)[ \\t]+[\\s\\S]+?)(?=(~0)|(\\n\\n(?!\\t| {2,}| {0,3}([*+-]|\\d+\\.)[ \\t])))/g;\n    text = text.replace(wholeList, function (wholeMatch, m1, list, m3) {\n\n      var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol'\n      return parseConsecutiveLists(list, listType)\n    })\n  }\n\n  // attacklab: strip sentinel\n  text = text.replace(/~0/, '')\n\n  text = globals.converter._dispatch('lists.after', text, options, globals)\n  return text\n})\n\n/**\n * Remove one level of line-leading tabs or spaces\n */\nshowdown.subParser('outdent', function (text) {\n  'use strict'\n\n  // attacklab: hack around Konqueror 3.5.4 bug:\n  // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n  text = text.replace(/^(\\t|[ ]{1,4})/gm, '~0') // attacklab: g_tab_width\n\n  // attacklab: clean up hack\n  text = text.replace(/~0/g, '')\n\n  return text\n})\n\n/**\n *\n */\nshowdown.subParser('paragraphs', function (text, options, globals) {\n  'use strict'\n\n  text = globals.converter._dispatch('paragraphs.before', text, options, globals)\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '')\n  text = text.replace(/\\n+$/g, '')\n\n  var grafs = text.split(/\\n{2,}/g),\n    grafsOut = [],\n    end = grafs.length // Wrap <p> tags\n\n  for (var i = 0; i < end; i++) {\n    var str = grafs[i]\n    // if this is an HTML marker, copy it\n    if (str.search(/~(K|G)(\\d+)\\1/g) >= 0) {\n      grafsOut.push(str)\n    } else {\n      str = showdown.subParser('spanGamut')(str, options, globals)\n      str = str.replace(/^([ \\t]*)/g, '<p>')\n      str += '</p>'\n      grafsOut.push(str)\n    }\n  }\n\n  /** Unhashify HTML blocks */\n  end = grafsOut.length\n  for (i = 0; i < end; i++) {\n    var blockText = '',\n      grafsOutIt = grafsOut[i],\n      codeFlag = false\n    // if this is a marker for an html block...\n    while (grafsOutIt.search(/~(K|G)(\\d+)\\1/) >= 0) {\n      var delim = RegExp.$1,\n        num = RegExp.$2\n\n      if (delim === 'K') {\n        blockText = globals.gHtmlBlocks[num]\n      } else {\n        // we need to check if ghBlock is a false positive\n        if (codeFlag) {\n          // use encoded version of all text\n          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text)\n        } else {\n          blockText = globals.ghCodeBlocks[num].codeblock\n        }\n      }\n      blockText = blockText.replace(/\\$/g, '$$$$') // Escape any dollar signs\n\n      grafsOutIt = grafsOutIt.replace(/(\\n\\n)?~(K|G)\\d+\\2(\\n\\n)?/, blockText)\n      // Check if grafsOutIt is a pre->code\n      if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n        codeFlag = true\n      }\n    }\n    grafsOut[i] = grafsOutIt\n  }\n  text = grafsOut.join('\\n\\n')\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '')\n  text = text.replace(/\\n+$/g, '')\n  return globals.converter._dispatch('paragraphs.after', text, options, globals)\n})\n\n/**\n * Run extension\n */\nshowdown.subParser('runExtension', function (ext, text, options, globals) {\n  'use strict'\n\n  if (ext.filter) {\n    text = ext.filter(text, globals.converter, options)\n\n  } else if (ext.regex) {\n    // TODO remove this when old extension loading mechanism is deprecated\n    var re = ext.regex\n    if (!re instanceof RegExp) {\n      re = new RegExp(re, 'g')\n    }\n    text = text.replace(re, ext.replace)\n  }\n\n  return text\n})\n\n/**\n * These are all the transformations that occur *within* block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('spanGamut', function (text, options, globals) {\n  'use strict'\n\n  text = globals.converter._dispatch('spanGamut.before', text, options, globals)\n  text = showdown.subParser('codeSpans')(text, options, globals)\n  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals)\n  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals)\n\n  // Process anchor and image tags. Images must come first,\n  // because ![foo][f] looks like an anchor.\n  text = showdown.subParser('images')(text, options, globals)\n  text = showdown.subParser('anchors')(text, options, globals)\n\n  // Make links out of things like `<http://example.com/>`\n  // Must come after _DoAnchors(), because you can use < and >\n  // delimiters in inline links like [this](<url>).\n  text = showdown.subParser('autoLinks')(text, options, globals)\n  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals)\n  text = showdown.subParser('italicsAndBold')(text, options, globals)\n  text = showdown.subParser('strikethrough')(text, options, globals)\n\n  // Do hard breaks:\n  text = text.replace(/  +\\n/g, ' <br />\\n')\n\n  text = globals.converter._dispatch('spanGamut.after', text, options, globals)\n  return text\n})\n\nshowdown.subParser('strikethrough', function (text, options, globals) {\n  'use strict'\n\n  if (options.strikethrough) {\n    text = globals.converter._dispatch('strikethrough.before', text, options, globals)\n    text = text.replace(/(?:~T){2}([\\s\\S]+?)(?:~T){2}/g, '<del>$1</del>')\n    text = globals.converter._dispatch('strikethrough.after', text, options, globals)\n  }\n\n  return text\n})\n\n/**\n * Strip any lines consisting only of spaces and tabs.\n * This makes subsequent regexs easier to write, because we can\n * match consecutive blank lines with /\\n+/ instead of something\n * contorted like /[ \\t]*\\n+/\n */\nshowdown.subParser('stripBlankLines', function (text) {\n  'use strict'\n  return text.replace(/^[ \\t]+$/mg, '')\n})\n\n/**\n * Strips link definitions from text, stores the URLs and titles in\n * hash references.\n * Link defs are in the form: ^[id]: url \"optional title\"\n *\n * ^[ ]{0,3}\\[(.+)\\]: // id = $1  attacklab: g_tab_width - 1\n * [ \\t]*\n * \\n?                  // maybe *one* newline\n * [ \\t]*\n * <?(\\S+?)>?          // url = $2\n * [ \\t]*\n * \\n?                // maybe one newline\n * [ \\t]*\n * (?:\n * (\\n*)              // any lines skipped = $3 attacklab: lookbehind removed\n * [\"(]\n * (.+?)              // title = $4\n * [\")]\n * [ \\t]*\n * )?                 // title is optional\n * (?:\\n+|$)\n * /gm,\n * function(){...});\n *\n */\nshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n  'use strict'\n\n  var regex = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=~0))/gm\n\n  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '~0'\n\n  text = text.replace(regex, function (wholeMatch, linkId, url, width, height, blankLines, title) {\n    linkId = linkId.toLowerCase()\n    globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url)  // Link IDs are case-insensitive\n\n    if (blankLines) {\n      // Oops, found blank lines, so it's not a title.\n      // Put back the parenthetical statement we stole.\n      return blankLines + title\n\n    } else {\n      if (title) {\n        globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;')\n      }\n      if (options.parseImgDimensions && width && height) {\n        globals.gDimensions[linkId] = {\n          width: width,\n          height: height\n        }\n      }\n    }\n    // Completely remove the definition from the text\n    return ''\n  })\n\n  // attacklab: strip sentinel\n  text = text.replace(/~0/, '')\n\n  return text\n})\n\nshowdown.subParser('tables', function (text, options, globals) {\n  'use strict'\n\n  if (!options.tables) {\n    return text\n  }\n\n  var tableRgx = /^[ \\t]{0,3}\\|?.+\\|.+\\n[ \\t]{0,3}\\|?[ \\t]*:?[ \\t]*(?:-|=){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:-|=){2,}[\\s\\S]+?(?:\\n\\n|~0)/gm\n\n  function parseStyles (sLine) {\n    if (/^:[ \\t]*--*$/.test(sLine)) {\n      return ' style=\"text-align:left;\"'\n    } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n      return ' style=\"text-align:right;\"'\n    } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n      return ' style=\"text-align:center;\"'\n    } else {\n      return ''\n    }\n  }\n\n  function parseHeaders (header, style) {\n    var id = ''\n    header = header.trim()\n    if (options.tableHeaderId) {\n      id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"'\n    }\n    header = showdown.subParser('spanGamut')(header, options, globals)\n\n    return '<th' + id + style + '>' + header + '</th>\\n'\n  }\n\n  function parseCells (cell, style) {\n    var subText = showdown.subParser('spanGamut')(cell, options, globals)\n    return '<td' + style + '>' + subText + '</td>\\n'\n  }\n\n  function buildTable (headers, cells) {\n    var tb = '<table>\\n<thead>\\n<tr>\\n',\n      tblLgn = headers.length\n\n    for (var i = 0; i < tblLgn; ++i) {\n      tb += headers[i]\n    }\n    tb += '</tr>\\n</thead>\\n<tbody>\\n'\n\n    for (i = 0; i < cells.length; ++i) {\n      tb += '<tr>\\n'\n      for (var ii = 0; ii < tblLgn; ++ii) {\n        tb += cells[i][ii]\n      }\n      tb += '</tr>\\n'\n    }\n    tb += '</tbody>\\n</table>\\n'\n    return tb\n  }\n\n  text = globals.converter._dispatch('tables.before', text, options, globals)\n\n  text = text.replace(tableRgx, function (rawTable) {\n\n    var i, tableLines = rawTable.split('\\n')\n\n    // strip wrong first and last column if wrapped tables are used\n    for (i = 0; i < tableLines.length; ++i) {\n      if (/^[ \\t]{0,3}\\|/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/^[ \\t]{0,3}\\|/, '')\n      }\n      if (/\\|[ \\t]*$/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '')\n      }\n    }\n\n    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim()}),\n      rawStyles = tableLines[1].split('|').map(function (s) { return s.trim()}),\n      rawCells = [],\n      headers = [],\n      styles = [],\n      cells = []\n\n    tableLines.shift()\n    tableLines.shift()\n\n    for (i = 0; i < tableLines.length; ++i) {\n      if (tableLines[i].trim() === '') {\n        continue\n      }\n      rawCells.push(\n        tableLines[i].split('|').map(function (s) {\n          return s.trim()\n        })\n      )\n    }\n\n    if (rawHeaders.length < rawStyles.length) {\n      return rawTable\n    }\n\n    for (i = 0; i < rawStyles.length; ++i) {\n      styles.push(parseStyles(rawStyles[i]))\n    }\n\n    for (i = 0; i < rawHeaders.length; ++i) {\n      if (showdown.helper.isUndefined(styles[i])) {\n        styles[i] = ''\n      }\n      headers.push(parseHeaders(rawHeaders[i], styles[i]))\n    }\n\n    for (i = 0; i < rawCells.length; ++i) {\n      var row = []\n      for (var ii = 0; ii < headers.length; ++ii) {\n        if (showdown.helper.isUndefined(rawCells[i][ii])) {\n\n        }\n        row.push(parseCells(rawCells[i][ii], styles[ii]))\n      }\n      cells.push(row)\n    }\n\n    return buildTable(headers, cells)\n  })\n\n  text = globals.converter._dispatch('tables.after', text, options, globals)\n\n  return text\n})\n\n/**\n * Swap back in all the special characters we've hidden.\n */\nshowdown.subParser('unescapeSpecialChars', function (text) {\n  'use strict'\n\n  text = text.replace(/~E(\\d+)E/g, function (wholeMatch, m1) {\n    var charCodeToReplace = parseInt(m1)\n    return String.fromCharCode(charCodeToReplace)\n  })\n  return text\n})\nmodule.exports = showdown\n"]}